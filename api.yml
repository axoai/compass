swagger: '2.0'
info:
  title: Compass
  description: Configuration Management API
  version: "0.1.0"
  contact:
    name: Pennybags
    url: https://github.com/zalando/compass
    email: team-pennybags@zalando.de
schemes:
  - https
tags:
  - name: dimension
    description: Dimension resources
  - name: key
    description: Key resources
  - name: value
    description: Value resources
paths:
  /dimensions:
    get:
      tags: [dimension]
      summary: List all dimensions
      description: |
        Retrieves the complete list of all dimensions currently defined. This is usually used for display purposes.
        Dimensions are sorted by priority in descending order.
      produces:
        - application/x.compass.dimensions+json
        - application/problem+json
      parameters:
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        200:
          description: OK
          headers:
            ETag:
              type: string
            Last-Modified:
              type: string
              format: http-date
          schema:
            type: array
            items:
              $ref: '#/definitions/Dimension'
        301:
          $ref: '#/responses/Moved-Permanently'
        304:
          description: Not Modified
        401:
          $ref: '#/responses/Unauthorized'
        403:
          $ref: '#/responses/Forbidden'
        406:
          $ref: '#/responses/Not-Acceptable'
        500:
          $ref: '#/responses/Internal-Server-Error'
        503:
          $ref: '#/responses/Service-Unavailable'
    put:
      tags: [dimension]
      summary: Re-order all dimensions
      description: |
        Dimensions have one strict global ordering, i.e. every dimension is comparable to any other.
        To change the priority one needs to update all dimensions with an explicit ordering. Clients are free to use this for any kind of specific operation
        on top, e.g. swapping two dimensions, rotating or moving one dimension up or down the list.
      consumes:
        - application/x.compass.dimension-priorities+json
      produces:
        - application/x.compass.dimensions+json
        - application/problem+json
      parameters:
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
        - name: dimensions
          in: body
          schema:
            type: array
            items:
              type: object
              title: DimensionReference
              properties:
                id:
                  type: string
              required:
                - id
      responses:
        200:
          description: OK
          headers:
            ETag:
              type: string
            Last-Modified:
              type: string
              format: http-date
            Content-Location:
              type: string
              format: uri
          schema:
            type: array
            items:
              $ref: '#/definitions/Dimension'
        301:
          $ref: '#/responses/Moved-Permanently'
        401:
          $ref: '#/responses/Unauthorized'
        403:
          $ref: '#/responses/Forbidden'
        406:
          $ref: '#/responses/Not-Acceptable'
        412:
          $ref: '#/responses/Precondition-Failed'
        415:
          $ref: '#/responses/Unsupported-Media-Type'
        422:
          $ref: '#/responses/Unprocessable-Entity'
        428:
          $ref: '#/responses/Precondition-Required'
        500:
          $ref: '#/responses/Internal-Server-Error'
        503:
          $ref: '#/responses/Service-Unavailable'
  /dimensions/{dimension-id}:
    get:
      tags: [dimension]
      summary: View a dimension
      produces:
        - application/x.compass.dimension+json
      parameters:
        - $ref: '#/parameters/Dimension-Id'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        200:
          description: OK
          headers:
            ETag:
              type: string
            Last-Modified:
              type: string
              format: http-date
          schema:
            $ref: '#/definitions/Dimension'
        301:
          $ref: '#/responses/Moved-Permanently'
        304:
          description: Not Modified
        401:
          $ref: '#/responses/Unauthorized'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/Not-Found'
        406:
          $ref: '#/responses/Not-Acceptable'
        500:
          $ref: '#/responses/Internal-Server-Error'
        503:
          $ref: '#/responses/Service-Unavailable'
    put:
      tags: [dimension]
      summary: Create or update a dimension
      description: Creating a new dimension will put it at the end of the priority list, i.e. it will have the lowest priority.
      consumes:
        - application/x.compass.dimension+json
      produces:
        - application/x.compass.dimension+json
      parameters:
        - $ref: '#/parameters/Dimension-Id'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
        - $ref: '#/parameters/If-None-Match'
      responses:
        200:
          description: OK
          headers:
            Content-Location:
              type: string
              format: uri
          schema:
            $ref: '#/definitions/Dimension'
        201:
          description: Created
          headers:
            Content-Location:
              type: string
              format: uri
          schema:
            $ref: '#/definitions/Dimension'
        301:
          $ref: '#/responses/Moved-Permanently'
        401:
          $ref: '#/responses/Unauthorized'
        403:
          $ref: '#/responses/Forbidden'
        406:
          $ref: '#/responses/Not-Acceptable'
        412:
          $ref: '#/responses/Precondition-Failed'
        415:
          $ref: '#/responses/Unsupported-Media-Type'
        422:
          $ref: '#/responses/Unprocessable-Entity'
        428:
          $ref: '#/responses/Precondition-Required'
        500:
          $ref: '#/responses/Internal-Server-Error'
        503:
          $ref: '#/responses/Service-Unavailable'
    delete:
      tags: [dimension]
      summary: Delete a dimension
      description: This requires that the dimension is not used by *any* key.
      parameters:
        - $ref: '#/parameters/Dimension-Id'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      responses:
        204:
          description: No Content
        301:
          $ref: '#/responses/Moved-Permanently'
        401:
          $ref: '#/responses/Unauthorized'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/Not-Found'
        412:
          $ref: '#/responses/Precondition-Failed'
        422:
          $ref: '#/responses/Unprocessable-Entity'
        428:
          $ref: '#/responses/Precondition-Required'
        500:
          $ref: '#/responses/Internal-Server-Error'
        503:
          $ref: '#/responses/Service-Unavailable'
  /keys:
    get:
      tags: [key]
      summary: List all keys
      produces:
        - application/x.compass.keys+json
      parameters:
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        200:
          description: OK
          headers:
            ETag:
              type: string
            Last-Modified:
              type: string
              format: http-date
          schema:
            type: array
            items:
              $ref: '#/definitions/Key'
        301:
          $ref: '#/responses/Moved-Permanently'
        304:
          description: Not Modified
        401:
          $ref: '#/responses/Unauthorized'
        403:
          $ref: '#/responses/Forbidden'
        406:
          $ref: '#/responses/Not-Acceptable'
        500:
          $ref: '#/responses/Internal-Server-Error'
        503:
          $ref: '#/responses/Service-Unavailable'
  /keys/{key-id}:
    get:
      tags: [key]
      summary: View a key
      produces:
        - application/x.compass.key+json
      parameters:
        - $ref: '#/parameters/Key-Id'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
      responses:
        200:
          description: OK
          headers:
            ETag:
              type: string
            Last-Modified:
              type: string
              format: http-date
          schema:
            $ref: '#/definitions/Key'
        301:
          $ref: '#/responses/Moved-Permanently'
        304:
          description: Not Modified
        401:
          $ref: '#/responses/Unauthorized'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/Not-Found'
        406:
          $ref: '#/responses/Not-Acceptable'
        500:
          $ref: '#/responses/Internal-Server-Error'
        503:
          $ref: '#/responses/Service-Unavailable'
    put:
      tags: [key]
      summary: Create or update a key
      consumes:
        - application/x.compass.key+json
      produces:
        - application/x.compass.key+json
      parameters:
        - $ref: '#/parameters/Key-Id'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
        - $ref: '#/parameters/If-None-Match'
      responses:
        200:
          description: OK
          headers:
            Content-Location:
              type: string
              format: uri
          schema:
            $ref: '#/definitions/Key'
        201:
          description: Created
          headers:
            Content-Location:
              type: string
              format: uri
          schema:
            $ref: '#/definitions/Key'
        301:
          $ref: '#/responses/Moved-Permanently'
        401:
          $ref: '#/responses/Unauthorized'
        403:
          $ref: '#/responses/Forbidden'
        406:
          $ref: '#/responses/Not-Acceptable'
        412:
          $ref: '#/responses/Precondition-Failed'
        415:
          $ref: '#/responses/Unsupported-Media-Type'
        422:
          $ref: '#/responses/Unprocessable-Entity'
        428:
          $ref: '#/responses/Precondition-Required'
        500:
          $ref: '#/responses/Internal-Server-Error'
        503:
          $ref: '#/responses/Service-Unavailable'
    delete:
      tags: [key]
      summary: Delete a key
      description: Deletes this key and **all** (!) of its values.
      parameters:
        - $ref: '#/parameters/Key-Id'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      responses:
        204:
          description: No Content
        301:
          $ref: '#/responses/Moved-Permanently'
        401:
          $ref: '#/responses/Unauthorized'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/Not-Found'
        412:
          $ref: '#/responses/Precondition-Failed'
        422:
          $ref: '#/responses/Unprocessable-Entity'
        428:
          $ref: '#/responses/Precondition-Required'
        500:
          $ref: '#/responses/Internal-Server-Error'
        503:
          $ref: '#/responses/Service-Unavailable'
  /keys/{key-id}/values:
    put:
      summary: Replace values for a given key
      tags: [value]
      consumes:
        - application/x.compass.entries+json
      produces:
        - application/x.compass.values+json
      parameters:
        - $ref: '#/parameters/Key-Id'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
        - $ref: '#/parameters/Entries'
      responses:
        200:
          description: OK
          headers:
            Content-Location:
              type: string
              format: uri
          schema:
            $ref: '#/definitions/Values'
        301:
          $ref: '#/responses/Moved-Permanently'
        401:
          $ref: '#/responses/Unauthorized'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/Not-Found'
        406:
          $ref: '#/responses/Not-Acceptable'
        412:
          $ref: '#/responses/Precondition-Failed'
        415:
          $ref: '#/responses/Unsupported-Media-Type'
        422:
          $ref: '#/responses/Unprocessable-Entity'
        428:
          $ref: '#/responses/Precondition-Required'
        500:
          $ref: '#/responses/Internal-Server-Error'
        503:
          $ref: '#/responses/Service-Unavailable'
    post:
      summary: Add values to a given key
      tags: [value]
      consumes:
        - application/x.compass.entries+json
      produces:
        - application/x.compass.values+json
      parameters:
        - $ref: '#/parameters/Key-Id'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
        - $ref: '#/parameters/Entries'
      responses:
        201:
          description: Created
          headers:
            Content-Location:
              type: string
              format: uri
          schema:
            $ref: '#/definitions/Values'
        301:
          $ref: '#/responses/Moved-Permanently'
        401:
          $ref: '#/responses/Unauthorized'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/Not-Found'
        406:
          $ref: '#/responses/Not-Acceptable'
        412:
          $ref: '#/responses/Precondition-Failed'
        415:
          $ref: '#/responses/Unsupported-Media-Type'
        422:
          $ref: '#/responses/Unprocessable-Entity'
        428:
          $ref: '#/responses/Precondition-Required'
        500:
          $ref: '#/responses/Internal-Server-Error'
        503:
          $ref: '#/responses/Service-Unavailable'
    delete:
      tags: [value]
      summary: Delete selected values
      parameters:
        - $ref: '#/parameters/Key-Id'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
        - $ref: '#/parameters/Filter'
      responses:
        204:
          description: No Content
        301:
          $ref: '#/responses/Moved-Permanently'
        401:
          $ref: '#/responses/Unauthorized'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/Not-Found'
        412:
          $ref: '#/responses/Precondition-Failed'
        422:
          $ref: '#/responses/Unprocessable-Entity'
        428:
          $ref: '#/responses/Precondition-Required'
        500:
          $ref: '#/responses/Internal-Server-Error'
        503:
          $ref: '#/responses/Service-Unavailable'
  /keys/{key-pattern}/values:
    get:
      tags: [value]
      summary: List selected values of selected keys
      produces:
        - application/x.compass.values+json
      parameters:
        - $ref: '#/parameters/Key-Pattern'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/Filter'
      responses:
        200:
          headers:
            ETag:
              type: string
            Last-Modified:
              type: string
              format: http-date
            Accept-Patch:
              type: string
              format: media-type
          description: Values found
          schema:
            $ref: '#/definitions/Values'
        301:
          $ref: '#/responses/Moved-Permanently'
        304:
          description: Not Modified
        401:
          $ref: '#/responses/Unauthorized'
        403:
          $ref: '#/responses/Forbidden'
        406:
          $ref: '#/responses/Not-Acceptable'
        500:
          $ref: '#/responses/Internal-Server-Error'
        503:
          $ref: '#/responses/Service-Unavailable'
  /keys/*/values:
    patch:
      tags: [value]
      summary: Create, updated and/or delete selected values of selected keys
      consumes:
        - application/x.compass.values-patch+json
      produces:
        - application/x.compass.values+json
      parameters:
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
      responses:
        200:
          description: OK
          headers:
            Content-Location:
              type: string
              format: uri
          schema:
            $ref: '#/definitions/Values'
        301:
          $ref: '#/responses/Moved-Permanently'
        401:
          $ref: '#/responses/Unauthorized'
        403:
          $ref: '#/responses/Forbidden'
        406:
          $ref: '#/responses/Not-Acceptable'
        412:
          $ref: '#/responses/Precondition-Failed'
        415:
          $ref: '#/responses/Unsupported-Media-Type'
        422:
          $ref: '#/responses/Unprocessable-Entity'
        428:
          $ref: '#/responses/Precondition-Required'
        500:
          $ref: '#/responses/Internal-Server-Error'
        503:
          $ref: '#/responses/Service-Unavailable'
parameters:
  Dimension-Id:
    name: dimension-id
    in: path
    type: string
    required: true
  Key-Id:
    name: key-id
    in: path
    type: string
    required: true
  Key-Pattern:
    name: key-pattern
    in: path
    type: string
    description: |
      Wildcard key pattern, any asterisk will be used to match any substring, including the empty string. Wildcards can be used to fetch keys based on
      a common prefix (`billing.*`), suffix (`*.active`), both (`billing.*.active`) or infix (`*.job.*`). Wildcards can also be used for partial
      namespaces, e.g. `billing.*Job.active` will match `billing.ReportJob.active` and `billing.SalaryJob.active`.

      A special value is a single asterisk `*`, which will return all keys. This is the preferred way for *fat* client to bulk-fetch the whole
      configuration usually asynchronously to reduce roundtrips and response latency.
    required: true
  Entries:
    name: entries
    in: body
    schema:
      $ref: '#/definitions/Entries'
  Filter:
    name: '*'
    description: |
      Any number filter query parameter based on the dimension of the values. This allows the following use cases:

      1. `GET /keys/*/values?country`, all values with a country
      2. `GET /keys/*/values?country=DE`, all values for Germany
      3. `GET /keys/*/values?country=DE&after=2015-09-07T16:00:00`, all values for Germany that are valid after *2015-09-07T16:00:00*
      4. `GET /keys/*/values?country=DE&country=AT`, all values for Germany and Austria
    in: query
    type: array
    items:
      type: string
    collectionFormat: multi
    allowEmptyValue: true
  If-None-Match:
    name: If-None-Match
    in: header
    type: string
  If-Modified-Since:
    name: If-Modified-Since
    in: header
    type: string
    format: http-date
  If-Match:
    name: If-Match
    in: header
    type: string
  If-Unmodified-Since:
    name: If-Unmodified-Since
    in: header
    type: string
    format: http-date
responses:
  Moved-Permanently:
    description: Moved Permanently
    headers:
      Location:
        type: string
        format: uri
  Unauthorized:
    description: Unauthorized
    schema:
      $ref: '#/definitions/Problem'
  Forbidden:
    description: Forbidden
    schema:
      $ref: '#/definitions/Problem'
  Not-Found:
    description: Not Found
    schema:
      $ref: '#/definitions/Problem'
  Not-Acceptable:
    description: Not Acceptable
    schema:
      $ref: '#/definitions/Problem'
  Precondition-Failed:
    description: Precondition Failed
    schema:
      $ref: '#/definitions/Problem'
  Unsupported-Media-Type:
    description: Unsupported Media Type
    schema:
      $ref: '#/definitions/Problem'
  Unprocessable-Entity:
    description: Unprocessable Entity
    schema:
      $ref: '#/definitions/Problem'
  Precondition-Required:
    description: Precondition Required
    schema:
      $ref: '#/definitions/Problem'
  Internal-Server-Error:
    description: Internal Server Error
    schema:
      $ref: '#/definitions/Problem'
  Service-Unavailable:
    description: Service Unavailable
    headers:
      Retry-After:
        type: integer
        format: int32
    schema:
      $ref: '#/definitions/Problem'
definitions:
  Problem:
    type: object
    properties:
      type:
        type: string
        format: uri
        description: |
          An absolute URI that identifies the problem type.  When dereferenced, it SHOULD
          provide human-readable documentation for the problem type (e.g., using HTML).
        example: http://httpstatus.es/503
      title:
        type: string
        description: |
          A short, human-readable summary of the problem type. It SHOULD NOT
          change from occurrence to occurrence of the problem, except for purposes of localisation.
        example: Service Unavailable
      status:
        type: integer
        format: int32
        description: |
          The HTTP status code generated by the origin server for this occurrence of the problem.
        example: 503
      detail:
        type: string
        description: |
          An human readable explanation specific to this occurrence of the problem.
        example: Connection to database timed out
      instance:
        type: string
        format: uri
        description: |
          An absolute URI that identifies the specific occurrence of the problem.
          It may or may not yield further information if dereferenced.
    required:
      - type
      - title
      - status
  Dimension:
    type: object
    properties:
      id:
        type: string
        description: The unique identifier for this dimension. It can be namespaced.
        example: country
      operator:
        type: string
        description: |
          The underlying operator that is used to apply any matching and ordering semantics. For the most use cases this will be `text/equals` which just
          performs value equality comparison.
        enum:
          - text/equals
          - date-time/less-than
          - date-time/less-than-or-equals
          - date-time/equals
          - date-time/greater-than
          - date-time/greater-than-or-equals
          - locale/contains
          - version/less-than
          - version/less-than-or-equals
          - version/equals
          - version/greater-than
          - version/greater-than-or-equals
          - version-range/contains
          - wildcard/matches
        example: text/equals
      name:
        type: string
        description: The human readable version of this dimension's identifier. Usually this will be used for display reasons.
        example: Country
      description:
        type: string
        description: |
          A description of this key that should define what the dimension is about and what possible values it can have.
          Alternatively this can be a URL to an accessible web page.
        example: ISO 3166-1 alpha-2 country code, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements
    required:
      - id
      - operator
      - name
      - description
  Key:
    type: object
    properties:
      id:
        type: string
        description: The unique identifier for this key. It can be namespaced.
        example: tax-rate
      name:
        type: string
        description: The human readable version of this key's identifier. Usually this will be used for display reasons.
        example: Tax Rate
      description:
        type: string
        description: |
          A description of this key that should define what the key is about. Alternatively this can be a 
          URL to an accessible web page.
        example: Tax rate as a factor in the range [0,1].
    required:
      - id
      - name
      - description
  Values:
    type: object
    additionalProperties:
      # keys are key identifiers
      $ref: '#/definitions/Entries'
    example:
      tax-rate:
        - dimensions:
            country: DE
            postal-code: 27498
          value: 0
        - dimensions:
            country: DE
          value: 0.19
      refund.url:
        - dimensions:
            region: eu-west-1
          value: http://example.co.uk/refunds
        - dimensions:
            region: eu-central-1
          value: http://example.de/refunds
  Entries:
    type: array
    items:
      $ref: '#/definitions/Entry'
  Entry:
    properties:
      dimensions:
        type: object
        additionalProperties:
          # keys are dimension identifiers
          type: string
          example: DE
      value:
        type: object
        description: |
          Actual value for this key and its dimensions. This may be of any type, i.e. everything from primitive values like boolean and integers to complex
          structures is possible. Although complex objects can usually be flattened with the use of custom dimensions very efficiently.
        example: 0.19
    required:
      - value
    example:
      dimensions:
        country: DE
        after: 2017-01-01T00:00:00
      value: 0.2